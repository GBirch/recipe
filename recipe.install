<?php

/**
 * @file
 * Install, update and uninstall functions for the recipe module.
 */

/**
 * Implements hook_install().
 */
function recipe_install() {
  // Set up the recipe node type.
  //require_once(dirname(__FILE__) . '/includes/recipe.node_type.inc');
  //_recipe_install_node_type();
}

/**
 * Implements hook_uninstall().
 *
 * Automatically drops tables in hook_schema.
 */
function recipe_uninstall() {
  // Delete the recipe node fields.
  //require_once(dirname(__FILE__) . '/includes/recipe_node_type.inc');
  //_recipe_uninstall_node_type();

  // remove node revisions
  //db_query('DELETE FROM {node_revision} WHERE nid in (select nid from {node} WHERE type = :type)', array(':type' => 'recipe'));
  // remove recipe nodes
  //db_query('DELETE FROM {node} WHERE type = :type', array(':type' => 'recipe'));

  // remove variables
  //db_query('DELETE FROM {variable} WHERE name like :type', array(':type' => 'recipe_%'));
}

/**
 * Implements hook_schema().
 */
function recipe_schema() {
  $schema['recipe'] = array(
    'fields' => array(
      'nid' => array(
        'description' => 'The primary identifier for a recipe.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'source' => array(
        'type' => 'varchar',
        'not null' => FALSE,
        'length' => 255,
      ),
      'yield' => array(
        'type' => 'int',
        'unsigned' => FALSE,
        'not null' => TRUE,
      ),
      'yield_unit' => array(
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The units for the yield field(servings, people, cans, cookies, etc).',
      ),
      'description' => array(
        'type' => 'text',
      ),
      'instructions' => array(
        'type' => 'text',
      ),
      'notes' => array(
        'type' => 'text',
      ),
      'preptime' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'cooktime' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('nid'),
  );

  return $schema;
}
